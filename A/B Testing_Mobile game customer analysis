{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "3"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.045422,
     "end_time": "2023-06-19T02:01:58.111716",
     "exception": false,
     "start_time": "2023-06-19T02:01:58.066294",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": [
    "## 1. Introduction\n",
    "<p><a href=\"https://www.facebook.com/cookiecatsgame\">Cookie Cats</a> is a hugely popular mobile puzzle game developed by <a href=\"http://tactile.dk\">Tactile Entertainment</a>. It's a classic \"connect three\"-style puzzle game where the player must connect tiles of the same color to clear the board and win the level. It also features singing cats. We're not kidding! Check out this short demo:</p>\n",
    "<p><a href=\"https://youtu.be/GaP5f0jVTWE\"><img src=\"https://assets.datacamp.com/production/project_184/img/cookie_cats_video.jpeg\" style=\"width: 500px\"></a></p>\n",
    "<p>As players progress through the levels of the game, they will occasionally encounter gates that force them to wait a non-trivial amount of time or make an in-app purchase to progress. In addition to driving in-app purchases, these gates serve the important purpose of giving players an enforced break from playing the game, hopefully resulting in that the player's enjoyment of the game being increased and prolonged.</p>\n",
    "<p><img src=\"https://assets.datacamp.com/production/project_184/img/cc_gates.png\" alt></p>\n",
    "<p>But where should the gates be placed? Initially the first gate was placed at level 30, but in this notebook we're going to analyze an AB-test where we moved the first gate in Cookie Cats from level 30 to level 40. In particular, we will look at the impact on player retention. But before we get to that, a key step before undertaking any analysis is understanding the data. So let's load it in and take a look!</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.04393,
     "end_time": "2023-06-19T02:01:58.201226",
     "exception": false,
     "start_time": "2023-06-19T02:01:58.157296",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Data Description**:\n",
    "This Dataset contains 90189 players'information. The variables are:\n",
    "\n",
    "**userid** - a unique number that identifies each player.\n",
    "\n",
    "**version** - whether the player was put in the control group (gate_30 - a gate at level 30) or the test group (gate_40 - a gate at level 40).\n",
    "\n",
    "**sum_gamerounds** - the number of game rounds played by the player during the first week after installation\n",
    "\n",
    "**retention_1** - did the player come back and play 1 day after installing?\n",
    "\n",
    "**retention_7** - did the player come back and play 7 days after installing?\n",
    "\n",
    "When a player installed the game, he or she was randomly assigned to either gate_30 or gate_40.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.043193,
     "end_time": "2023-06-19T02:01:58.287863",
     "exception": false,
     "start_time": "2023-06-19T02:01:58.244670",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. Exploratory Data Analysis(EDA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:01:58.380434Z",
     "iopub.status.busy": "2023-06-19T02:01:58.379320Z",
     "iopub.status.idle": "2023-06-19T02:01:58.384732Z",
     "shell.execute_reply": "2023-06-19T02:01:58.383897Z",
     "shell.execute_reply.started": "2023-06-18T21:28:18.539525Z"
    },
    "papermill": {
     "duration": 0.053623,
     "end_time": "2023-06-19T02:01:58.384873",
     "exception": false,
     "start_time": "2023-06-19T02:01:58.331250",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#!pip install seaborn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:01:58.482559Z",
     "iopub.status.busy": "2023-06-19T02:01:58.481743Z",
     "iopub.status.idle": "2023-06-19T02:01:59.418375Z",
     "shell.execute_reply": "2023-06-19T02:01:59.416805Z",
     "shell.execute_reply.started": "2023-06-19T00:20:59.250151Z"
    },
    "papermill": {
     "duration": 0.989056,
     "end_time": "2023-06-19T02:01:59.418519",
     "exception": false,
     "start_time": "2023-06-19T02:01:58.429463",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Import Package\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt \n",
    "import os \n",
    "\n",
    "#Hypothesis Testing Package\n",
    "from scipy.stats import shapiro\n",
    "import scipy.stats as stats\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "warnings.simplefilter(action='ignore', category=FutureWarning)\n",
    "\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.options.display.float_format = '{:.4f}'.format"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "dc": {
     "key": "3"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:01:59.511150Z",
     "iopub.status.busy": "2023-06-19T02:01:59.510357Z",
     "iopub.status.idle": "2023-06-19T02:01:59.629060Z",
     "shell.execute_reply": "2023-06-19T02:01:59.629823Z",
     "shell.execute_reply.started": "2023-06-19T00:21:03.426104Z"
    },
    "papermill": {
     "duration": 0.167629,
     "end_time": "2023-06-19T02:01:59.629995",
     "exception": false,
     "start_time": "2023-06-19T02:01:59.462366",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>userid</th>\n",
       "      <th>version</th>\n",
       "      <th>sum_gamerounds</th>\n",
       "      <th>retention_1</th>\n",
       "      <th>retention_7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>116</td>\n",
       "      <td>gate_30</td>\n",
       "      <td>3</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>337</td>\n",
       "      <td>gate_30</td>\n",
       "      <td>38</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>377</td>\n",
       "      <td>gate_40</td>\n",
       "      <td>165</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>483</td>\n",
       "      <td>gate_40</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>488</td>\n",
       "      <td>gate_40</td>\n",
       "      <td>179</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   userid  version  sum_gamerounds  retention_1  retention_7\n",
       "0     116  gate_30               3        False        False\n",
       "1     337  gate_30              38         True        False\n",
       "2     377  gate_40             165         True        False\n",
       "3     483  gate_40               1        False        False\n",
       "4     488  gate_40             179         True         True"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Data Exploration \n",
    "df = pd.read_csv('/kaggle/input/mobile-games-ab-testing/cookie_cats.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:01:59.723825Z",
     "iopub.status.busy": "2023-06-19T02:01:59.722733Z",
     "iopub.status.idle": "2023-06-19T02:01:59.728836Z",
     "shell.execute_reply": "2023-06-19T02:01:59.729559Z",
     "shell.execute_reply.started": "2023-06-19T00:21:06.325301Z"
    },
    "papermill": {
     "duration": 0.054531,
     "end_time": "2023-06-19T02:01:59.729719",
     "exception": false,
     "start_time": "2023-06-19T02:01:59.675188",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90189"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:01:59.822996Z",
     "iopub.status.busy": "2023-06-19T02:01:59.822253Z",
     "iopub.status.idle": "2023-06-19T02:01:59.879876Z",
     "shell.execute_reply": "2023-06-19T02:01:59.879078Z",
     "shell.execute_reply.started": "2023-06-19T00:21:07.917263Z"
    },
    "papermill": {
     "duration": 0.105441,
     "end_time": "2023-06-19T02:01:59.880006",
     "exception": false,
     "start_time": "2023-06-19T02:01:59.774565",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data shape: (90189, 5)\n"
     ]
    }
   ],
   "source": [
    "#Summary table function\n",
    "def summary(df):\n",
    "    print(f'data shape: {df.shape}')\n",
    "    summ = pd.DataFrame(df.dtypes, columns=['data type'])\n",
    "    summ['#missing'] = df.isnull().sum().values \n",
    "    summ['%missing'] = df.isnull().sum().values / len(df)* 100\n",
    "    summ['#unique'] = df.nunique().values\n",
    "    \n",
    "    return summ\n",
    "analysis_table=summary(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:01:59.982436Z",
     "iopub.status.busy": "2023-06-19T02:01:59.981642Z",
     "iopub.status.idle": "2023-06-19T02:01:59.985586Z",
     "shell.execute_reply": "2023-06-19T02:01:59.986181Z",
     "shell.execute_reply.started": "2023-06-18T21:28:48.479921Z"
    },
    "papermill": {
     "duration": 0.061238,
     "end_time": "2023-06-19T02:01:59.986356",
     "exception": false,
     "start_time": "2023-06-19T02:01:59.925118",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>data type</th>\n",
       "      <th>#missing</th>\n",
       "      <th>%missing</th>\n",
       "      <th>#unique</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>userid</th>\n",
       "      <td>int64</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>90189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>version</th>\n",
       "      <td>object</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sum_gamerounds</th>\n",
       "      <td>int64</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>retention_1</th>\n",
       "      <td>bool</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>retention_7</th>\n",
       "      <td>bool</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               data type  #missing  %missing  #unique\n",
       "userid             int64         0    0.0000    90189\n",
       "version           object         0    0.0000        2\n",
       "sum_gamerounds     int64         0    0.0000      942\n",
       "retention_1         bool         0    0.0000        2\n",
       "retention_7         bool         0    0.0000        2"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "analysis_table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.045074,
     "end_time": "2023-06-19T02:02:00.077565",
     "exception": false,
     "start_time": "2023-06-19T02:02:00.032491",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Conclusion:** There is no missing value in this dataset, and all userids are unique"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:00.175300Z",
     "iopub.status.busy": "2023-06-19T02:02:00.174372Z",
     "iopub.status.idle": "2023-06-19T02:02:00.205872Z",
     "shell.execute_reply": "2023-06-19T02:02:00.206469Z",
     "shell.execute_reply.started": "2023-06-18T21:29:20.915111Z"
    },
    "papermill": {
     "duration": 0.082669,
     "end_time": "2023-06-19T02:02:00.206636",
     "exception": false,
     "start_time": "2023-06-19T02:02:00.123967",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>1%</th>\n",
       "      <th>5%</th>\n",
       "      <th>10%</th>\n",
       "      <th>20%</th>\n",
       "      <th>50%</th>\n",
       "      <th>80%</th>\n",
       "      <th>90%</th>\n",
       "      <th>95%</th>\n",
       "      <th>99%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sum_gamerounds</th>\n",
       "      <td>90189.0000</td>\n",
       "      <td>51.8725</td>\n",
       "      <td>195.0509</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>3.0000</td>\n",
       "      <td>16.0000</td>\n",
       "      <td>67.0000</td>\n",
       "      <td>134.0000</td>\n",
       "      <td>221.0000</td>\n",
       "      <td>493.0000</td>\n",
       "      <td>49854.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    count    mean      std    min     1%     5%    10%    20%  \\\n",
       "sum_gamerounds 90189.0000 51.8725 195.0509 0.0000 0.0000 1.0000 1.0000 3.0000   \n",
       "\n",
       "                   50%     80%      90%      95%      99%        max  \n",
       "sum_gamerounds 16.0000 67.0000 134.0000 221.0000 493.0000 49854.0000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check Outliers\n",
    "df.describe([0.01, 0.05, 0.10, 0.20, 0.80, 0.90, 0.95, 0.99])[[\"sum_gamerounds\"]].T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:00.305775Z",
     "iopub.status.busy": "2023-06-19T02:02:00.305046Z",
     "iopub.status.idle": "2023-06-19T02:02:00.573816Z",
     "shell.execute_reply": "2023-06-19T02:02:00.573180Z",
     "shell.execute_reply.started": "2023-06-18T21:30:17.289898Z"
    },
    "papermill": {
     "duration": 0.320828,
     "end_time": "2023-06-19T02:02:00.573944",
     "exception": false,
     "start_time": "2023-06-19T02:02:00.253116",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'User Count')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "# Counting the number of players for each number of game rounds \n",
    "plot_df = df.groupby('sum_gamerounds')['userid'].count()\n",
    "\n",
    "# Plotting the distribution of players that played 0 to 100 game rounds\n",
    "ax = plot_df.head(n=100).plot(x=\"sum_gamerounds\", y=\"userid\", kind=\"hist\")\n",
    "ax.set_xlabel(\"Game Rounds\")\n",
    "ax.set_ylabel(\"User Count\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:00.682184Z",
     "iopub.status.busy": "2023-06-19T02:02:00.676465Z",
     "iopub.status.idle": "2023-06-19T02:02:00.714591Z",
     "shell.execute_reply": "2023-06-19T02:02:00.713837Z",
     "shell.execute_reply.started": "2023-06-18T21:30:55.807966Z"
    },
    "papermill": {
     "duration": 0.093411,
     "end_time": "2023-06-19T02:02:00.714721",
     "exception": false,
     "start_time": "2023-06-19T02:02:00.621310",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>version</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>gate_30</th>\n",
       "      <td>44700</td>\n",
       "      <td>17</td>\n",
       "      <td>52.4563</td>\n",
       "      <td>256.7164</td>\n",
       "      <td>49854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>gate_40</th>\n",
       "      <td>45489</td>\n",
       "      <td>16</td>\n",
       "      <td>51.2988</td>\n",
       "      <td>103.2944</td>\n",
       "      <td>2640</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         count  median    mean      std    max\n",
       "version                                       \n",
       "gate_30  44700      17 52.4563 256.7164  49854\n",
       "gate_40  45489      16 51.2988 103.2944   2640"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Summary Stats with A&B Group\n",
    "df.groupby('version').sum_gamerounds.agg([\"count\", \"median\", \"mean\", \"std\", \"max\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:00.830365Z",
     "iopub.status.busy": "2023-06-19T02:02:00.827578Z",
     "iopub.status.idle": "2023-06-19T02:02:01.553096Z",
     "shell.execute_reply": "2023-06-19T02:02:01.551853Z",
     "shell.execute_reply.started": "2023-06-18T21:30:58.820333Z"
    },
    "papermill": {
     "duration": 0.790448,
     "end_time": "2023-06-19T02:02:01.553254",
     "exception": false,
     "start_time": "2023-06-19T02:02:00.762806",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,axes=plt.subplots(1,3,figsize=(20,5))\n",
    "df[(df.version == \"gate_30\")].hist(\"sum_gamerounds\", ax = axes[0], color = \"steelblue\")\n",
    "df[(df.version == \"gate_40\")].hist(\"sum_gamerounds\", ax = axes[1], color = \"steelblue\")\n",
    "sns.boxplot(x = df.version, y = df.sum_gamerounds, ax = axes[2])\n",
    "\n",
    "plt.suptitle(\"Initial Distribution\", fontsize = 20)\n",
    "axes[0].set_title(\"Distribution of Gate 30 (A)\", fontsize = 15)\n",
    "axes[1].set_title(\"Distribution of Gate 40 (B)\", fontsize = 15)\n",
    "axes[2].set_title(\"Distribution of Two Groups\", fontsize = 15)\n",
    "plt.tight_layout(pad = 4);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:01.656727Z",
     "iopub.status.busy": "2023-06-19T02:02:01.655441Z",
     "iopub.status.idle": "2023-06-19T02:02:02.047553Z",
     "shell.execute_reply": "2023-06-19T02:02:02.048222Z"
    },
    "papermill": {
     "duration": 0.445802,
     "end_time": "2023-06-19T02:02:02.048408",
     "exception": false,
     "start_time": "2023-06-19T02:02:01.602606",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[df.version == \"gate_30\"].reset_index().set_index(\"index\").sum_gamerounds.plot(legend = True, label = \"Gate 30\", figsize = (20,5))\n",
    "df[df.version == \"gate_40\"].reset_index().set_index(\"index\").sum_gamerounds.plot(legend = True, label = \"Gate 40\")\n",
    "plt.suptitle(\"Initial Distribution\", fontsize = 20);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:02.158941Z",
     "iopub.status.busy": "2023-06-19T02:02:02.157873Z",
     "iopub.status.idle": "2023-06-19T02:02:02.300381Z",
     "shell.execute_reply": "2023-06-19T02:02:02.299170Z",
     "shell.execute_reply.started": "2023-06-19T00:21:20.078486Z"
    },
    "papermill": {
     "duration": 0.200727,
     "end_time": "2023-06-19T02:02:02.300534",
     "exception": false,
     "start_time": "2023-06-19T02:02:02.099807",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>1%</th>\n",
       "      <th>5%</th>\n",
       "      <th>10%</th>\n",
       "      <th>20%</th>\n",
       "      <th>50%</th>\n",
       "      <th>80%</th>\n",
       "      <th>90%</th>\n",
       "      <th>95%</th>\n",
       "      <th>99%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sum_gamerounds</th>\n",
       "      <td>90188.0000</td>\n",
       "      <td>51.3203</td>\n",
       "      <td>102.6827</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>3.0000</td>\n",
       "      <td>16.0000</td>\n",
       "      <td>67.0000</td>\n",
       "      <td>134.0000</td>\n",
       "      <td>221.0000</td>\n",
       "      <td>493.0000</td>\n",
       "      <td>2961.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    count    mean      std    min     1%     5%    10%    20%  \\\n",
       "sum_gamerounds 90188.0000 51.3203 102.6827 0.0000 0.0000 1.0000 1.0000 3.0000   \n",
       "\n",
       "                   50%     80%      90%      95%      99%       max  \n",
       "sum_gamerounds 16.0000 67.0000 134.0000 221.0000 493.0000 2961.0000  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#It seems that one observations in group A shows extermely high value of sum_gamerounds comapred with others\n",
    "#I will drop it and have a look at the new distribution \n",
    "df=df[df.sum_gamerounds<df.sum_gamerounds.max()]\n",
    "\n",
    "df.describe([0.01, 0.05, 0.10, 0.20, 0.80, 0.90, 0.95, 0.99])[[\"sum_gamerounds\"]].T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:02.421061Z",
     "iopub.status.busy": "2023-06-19T02:02:02.419899Z",
     "iopub.status.idle": "2023-06-19T02:02:03.091292Z",
     "shell.execute_reply": "2023-06-19T02:02:03.090256Z",
     "shell.execute_reply.started": "2023-06-18T21:32:15.201135Z"
    },
    "papermill": {
     "duration": 0.73394,
     "end_time": "2023-06-19T02:02:03.091473",
     "exception": false,
     "start_time": "2023-06-19T02:02:02.357533",
     "status": "completed"
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,axes=plt.subplots(1,3,figsize=(20,5))\n",
    "df[(df.version == \"gate_30\")].hist(\"sum_gamerounds\", ax = axes[0], color = \"steelblue\")\n",
    "df[(df.version == \"gate_40\")].hist(\"sum_gamerounds\", ax = axes[1], color = \"steelblue\")\n",
    "sns.boxplot(x = df.version, y = df.sum_gamerounds, ax = axes[2])\n",
    "\n",
    "plt.suptitle(\"New Distribution\", fontsize = 20)\n",
    "axes[0].set_title(\"Distribution of Gate 30 (A)\", fontsize = 15)\n",
    "axes[1].set_title(\"Distribution of Gate 40 (B)\", fontsize = 15)\n",
    "axes[2].set_title(\"Distribution of Two Groups\", fontsize = 15)\n",
    "plt.tight_layout(pad = 4);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:03.237963Z",
     "iopub.status.busy": "2023-06-19T02:02:03.237154Z",
     "iopub.status.idle": "2023-06-19T02:02:03.681053Z",
     "shell.execute_reply": "2023-06-19T02:02:03.680391Z",
     "shell.execute_reply.started": "2023-06-19T00:22:56.514685Z"
    },
    "papermill": {
     "duration": 0.526431,
     "end_time": "2023-06-19T02:02:03.681188",
     "exception": false,
     "start_time": "2023-06-19T02:02:03.154757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[df.version == \"gate_30\"].reset_index().set_index(\"index\").sum_gamerounds.plot(legend = True, label = \"Gate 30\", figsize = (20,5))\n",
    "df[df.version == \"gate_40\"].reset_index().set_index(\"index\").sum_gamerounds.plot(legend = True, label = \"Gate 40\")\n",
    "plt.suptitle(\"New Distribution\", fontsize = 20);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:03.796206Z",
     "iopub.status.busy": "2023-06-19T02:02:03.795331Z",
     "iopub.status.idle": "2023-06-19T02:02:03.798954Z",
     "shell.execute_reply": "2023-06-19T02:02:03.798320Z"
    },
    "papermill": {
     "duration": 0.063742,
     "end_time": "2023-06-19T02:02:03.799125",
     "exception": false,
     "start_time": "2023-06-19T02:02:03.735383",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Delete the ourliers using Z-scores\n",
    "# out=[]\n",
    "# def Zscore_outlier(df):\n",
    "#     m = np.mean(df)\n",
    "#     sd = np.std(df)\n",
    "#     for i in df: \n",
    "#         z = (i-m)/sd\n",
    "#         if np.abs(z) > 3: \n",
    "#             out.append(i)\n",
    "#     print(\"Outliers:\",out)\n",
    "# Zscore_outlier(df['sum_gamerounds'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:03.914607Z",
     "iopub.status.busy": "2023-06-19T02:02:03.913801Z",
     "iopub.status.idle": "2023-06-19T02:02:03.921292Z",
     "shell.execute_reply": "2023-06-19T02:02:03.920520Z",
     "shell.execute_reply.started": "2023-06-19T00:23:19.906516Z"
    },
    "papermill": {
     "duration": 0.067593,
     "end_time": "2023-06-19T02:02:03.921423",
     "exception": false,
     "start_time": "2023-06-19T02:02:03.853830",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3994"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#It seems that some users never played the game after downloading\n",
    "df[df['sum_gamerounds']==0].userid.count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.053983,
     "end_time": "2023-06-19T02:02:04.031206",
     "exception": false,
     "start_time": "2023-06-19T02:02:03.977223",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Conclusion**:There are 3994 users never player the game after downloading. It may caused by the following reasons:\n",
    "* ·They have no time after downloading, then they forgot about the game\n",
    "* ·They find more interesting games\n",
    "* ·They download by mistakes\n",
    "* ·They don't like the game after downloading\n",
    "\n",
    "Since these users never played the game before, we excluded this kind of user from analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:04.147744Z",
     "iopub.status.busy": "2023-06-19T02:02:04.146964Z",
     "iopub.status.idle": "2023-06-19T02:02:04.168673Z",
     "shell.execute_reply": "2023-06-19T02:02:04.167893Z",
     "shell.execute_reply.started": "2023-06-19T00:21:26.372123Z"
    },
    "papermill": {
     "duration": 0.082512,
     "end_time": "2023-06-19T02:02:04.168807",
     "exception": false,
     "start_time": "2023-06-19T02:02:04.086295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "userid            86194\n",
       "version           86194\n",
       "sum_gamerounds    86194\n",
       "retention_1       86194\n",
       "retention_7       86194\n",
       "dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new=df[df['sum_gamerounds']>0]\n",
    "df_new.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:04.295355Z",
     "iopub.status.busy": "2023-06-19T02:02:04.294536Z",
     "iopub.status.idle": "2023-06-19T02:02:04.305022Z",
     "shell.execute_reply": "2023-06-19T02:02:04.304270Z",
     "shell.execute_reply.started": "2023-06-18T21:37:10.218682Z"
    },
    "papermill": {
     "duration": 0.078447,
     "end_time": "2023-06-19T02:02:04.305170",
     "exception": false,
     "start_time": "2023-06-19T02:02:04.226723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "version\n",
       "gate_30    42762\n",
       "gate_40    43432\n",
       "Name: userid, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new.groupby('version')['userid'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:04.432336Z",
     "iopub.status.busy": "2023-06-19T02:02:04.431160Z",
     "iopub.status.idle": "2023-06-19T02:02:04.675363Z",
     "shell.execute_reply": "2023-06-19T02:02:04.674719Z",
     "shell.execute_reply.started": "2023-06-18T21:37:19.292856Z"
    },
    "papermill": {
     "duration": 0.313757,
     "end_time": "2023-06-19T02:02:04.675506",
     "exception": false,
     "start_time": "2023-06-19T02:02:04.361749",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0.98, 'The number of users in the game rounds played')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = plt.subplots(1, 1, figsize = (25,10))\n",
    "df_new.groupby(\"sum_gamerounds\").userid.count()[:200].plot()\n",
    "plt.suptitle(\"The number of users in the game rounds played\", fontsize = 25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.05651,
     "end_time": "2023-06-19T02:02:04.789969",
     "exception": false,
     "start_time": "2023-06-19T02:02:04.733459",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Conclusion**:The number of users decrease as the level progress, possible reasons are:\n",
    "* ·As the level progress, it would become much more difficult for players\n",
    "* ·They would feel boring when play the same thing again an again\n",
    "* ·Tactile Entertainment may need to design a survey on why users churn playing the game"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:04.910099Z",
     "iopub.status.busy": "2023-06-19T02:02:04.909017Z",
     "iopub.status.idle": "2023-06-19T02:02:04.912710Z",
     "shell.execute_reply": "2023-06-19T02:02:04.912016Z",
     "shell.execute_reply.started": "2023-06-18T21:38:05.115122Z"
    },
    "papermill": {
     "duration": 0.065966,
     "end_time": "2023-06-19T02:02:04.912845",
     "exception": false,
     "start_time": "2023-06-19T02:02:04.846879",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # How many users reached gate 30 & gate 40 levels?\n",
    "# df_new.groupby(\"sum_gamerounds\").userid.count().loc[[30,40]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:05.038158Z",
     "iopub.status.busy": "2023-06-19T02:02:05.037045Z",
     "iopub.status.idle": "2023-06-19T02:02:05.185698Z",
     "shell.execute_reply": "2023-06-19T02:02:05.184839Z",
     "shell.execute_reply.started": "2023-06-18T21:40:04.043434Z"
    },
    "papermill": {
     "duration": 0.216103,
     "end_time": "2023-06-19T02:02:05.185908",
     "exception": false,
     "start_time": "2023-06-19T02:02:04.969805",
     "status": "completed"
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>version</th>\n",
       "      <th>Retention</th>\n",
       "      <th>count</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>gate_30</td>\n",
       "      <td>False-False</td>\n",
       "      <td>20959</td>\n",
       "      <td>7</td>\n",
       "      <td>12.8805</td>\n",
       "      <td>22.2886</td>\n",
       "      <td>981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>gate_30</td>\n",
       "      <td>False-True</td>\n",
       "      <td>1810</td>\n",
       "      <td>44</td>\n",
       "      <td>73.7757</td>\n",
       "      <td>93.3686</td>\n",
       "      <td>1072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>gate_30</td>\n",
       "      <td>True-False</td>\n",
       "      <td>13318</td>\n",
       "      <td>33</td>\n",
       "      <td>49.8437</td>\n",
       "      <td>58.1487</td>\n",
       "      <td>918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>gate_30</td>\n",
       "      <td>True-True</td>\n",
       "      <td>6675</td>\n",
       "      <td>127</td>\n",
       "      <td>183.9139</td>\n",
       "      <td>189.6272</td>\n",
       "      <td>2961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>gate_40</td>\n",
       "      <td>False-False</td>\n",
       "      <td>21595</td>\n",
       "      <td>6</td>\n",
       "      <td>13.0177</td>\n",
       "      <td>21.5169</td>\n",
       "      <td>547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>gate_40</td>\n",
       "      <td>False-True</td>\n",
       "      <td>1764</td>\n",
       "      <td>47</td>\n",
       "      <td>75.6451</td>\n",
       "      <td>94.5654</td>\n",
       "      <td>1241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>gate_40</td>\n",
       "      <td>True-False</td>\n",
       "      <td>13571</td>\n",
       "      <td>32</td>\n",
       "      <td>50.1803</td>\n",
       "      <td>60.9551</td>\n",
       "      <td>2640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>gate_40</td>\n",
       "      <td>True-True</td>\n",
       "      <td>6502</td>\n",
       "      <td>133</td>\n",
       "      <td>190.3994</td>\n",
       "      <td>194.2224</td>\n",
       "      <td>2294</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   version    Retention  count  median     mean      std   max\n",
       "0  gate_30  False-False  20959       7  12.8805  22.2886   981\n",
       "1  gate_30   False-True   1810      44  73.7757  93.3686  1072\n",
       "2  gate_30   True-False  13318      33  49.8437  58.1487   918\n",
       "3  gate_30    True-True   6675     127 183.9139 189.6272  2961\n",
       "4  gate_40  False-False  21595       6  13.0177  21.5169   547\n",
       "5  gate_40   False-True   1764      47  75.6451  94.5654  1241\n",
       "6  gate_40   True-False  13571      32  50.1803  60.9551  2640\n",
       "7  gate_40    True-True   6502     133 190.3994 194.2224  2294"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new[\"Retention\"] = list(map(lambda x,y: str(x)+\"-\"+str(y), df_new.retention_1, df_new.retention_7))\n",
    "df_new.groupby([\"version\", \"Retention\"]).sum_gamerounds.agg([\"count\", \"median\", \"mean\", \"std\", \"max\"]).reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.057479,
     "end_time": "2023-06-19T02:02:05.303537",
     "exception": false,
     "start_time": "2023-06-19T02:02:05.246058",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Conclusion**:Based on the statiscal table, similar results are seen when the number of users who came and did not come 1 day and 7 days after the game was installing. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.059993,
     "end_time": "2023-06-19T02:02:05.421397",
     "exception": false,
     "start_time": "2023-06-19T02:02:05.361404",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3. A/B Testing on number of game rounds \n",
    "\n",
    "(1)**Hypothesis Testing**\n",
    "\n",
    "Assumptions:\n",
    "Check normality\n",
    "If Normal Distribution, check homogeneity\n",
    "\n",
    "\n",
    "Steps:\n",
    "Split & Define Control Group & Test Group\n",
    "Apply Shapiro Test for normality\n",
    "\n",
    "* If parametric apply Levene Test for homogeneity of variances\n",
    "* If Parametric + homogeneity of variances apply T-Test\n",
    "* If Parametric - homogeneity of variances apply Welch Test\n",
    "* If Non-parametric apply Mann Whitney U Test directly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:05.544918Z",
     "iopub.status.busy": "2023-06-19T02:02:05.544110Z",
     "iopub.status.idle": "2023-06-19T02:02:05.547448Z",
     "shell.execute_reply": "2023-06-19T02:02:05.546771Z",
     "shell.execute_reply.started": "2023-06-18T21:23:29.927040Z"
    },
    "papermill": {
     "duration": 0.067268,
     "end_time": "2023-06-19T02:02:05.547583",
     "exception": false,
     "start_time": "2023-06-19T02:02:05.480315",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Check Normality\n",
    "# df[\"version\"] = np.where(df.version == \"gate_30\", \"A\", \"B\")\n",
    "# df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:05.677509Z",
     "iopub.status.busy": "2023-06-19T02:02:05.676678Z",
     "iopub.status.idle": "2023-06-19T02:02:05.768393Z",
     "shell.execute_reply": "2023-06-19T02:02:05.767727Z",
     "shell.execute_reply.started": "2023-06-18T21:46:25.869090Z"
    },
    "papermill": {
     "duration": 0.162195,
     "end_time": "2023-06-19T02:02:05.768527",
     "exception": false,
     "start_time": "2023-06-19T02:02:05.606332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# A/B Testing Hypothesis\n",
      "H0: A == B\n",
      "H1: A != B \n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Test Type</th>\n",
       "      <th>AB Hypothesis</th>\n",
       "      <th>p-value</th>\n",
       "      <th>Comment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Non-Parametric</td>\n",
       "      <td>Reject H0</td>\n",
       "      <td>0.0254</td>\n",
       "      <td>A/B groups are not similar!</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Test Type AB Hypothesis  p-value                      Comment\n",
       "0  Non-Parametric     Reject H0   0.0254  A/B groups are not similar!"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# A/B Testing Function \n",
    "def AB_Test(dataframe, group, target):\n",
    "     # Packages\n",
    "    from scipy.stats import shapiro\n",
    "    import scipy.stats as stats\n",
    "    \n",
    "    # Split A/B\n",
    "    groupA = dataframe[dataframe[group] == \"gate_30\"][target]\n",
    "    groupB = dataframe[dataframe[group] == \"gate_40\"][target]\n",
    "    \n",
    "    # Assumption: Normality\n",
    "    ntA = shapiro(groupA)[1] < 0.05\n",
    "    ntB = shapiro(groupB)[1] < 0.05\n",
    "    # H0: Distribution is Normal  - False\n",
    "    # H1: Distribution is not Normal - True\n",
    "    \n",
    "    if (ntA == False) & (ntB == False): # \"H0: Normal Distribution\"\n",
    "        # Parametric Test\n",
    "        # Assumption: Homogeneity of variances\n",
    "        leveneTest = stats.levene(groupA, groupB)[1] < 0.05\n",
    "        # H0: Homogeneity: False\n",
    "        # H1: Heterogeneous: True\n",
    "        \n",
    "        if leveneTest == False:\n",
    "            # Homogeneity\n",
    "            ttest = stats.ttest_ind(groupA, groupB, equal_var=True)[1]\n",
    "            # H0: M1 == M2 - False\n",
    "            # H1: M1 != M2 - True\n",
    "        else:\n",
    "            # Heterogeneous\n",
    "            ttest = stats.ttest_ind(groupA, groupB, equal_var=False)[1]\n",
    "            # H0: M1 == M2 - False\n",
    "            # H1: M1 != M2 - True\n",
    "    else:\n",
    "        # Non-Parametric Test\n",
    "        ttest = stats.mannwhitneyu(groupA, groupB)[1] \n",
    "        # H0: M1 == M2 - False\n",
    "        # H1: M1 != M2 - True\n",
    "        \n",
    "    # Result\n",
    "    temp = pd.DataFrame({\n",
    "        \"AB Hypothesis\":[ttest < 0.05], \n",
    "        \"p-value\":[ttest]\n",
    "    })\n",
    "    temp[\"Test Type\"] = np.where((ntA == False) & (ntB == False), \"Parametric\", \"Non-Parametric\")\n",
    "    temp[\"AB Hypothesis\"] = np.where(temp[\"AB Hypothesis\"] == False, \"Fail to Reject H0\", \"Reject H0\")\n",
    "    temp[\"Comment\"] = np.where(temp[\"AB Hypothesis\"] == \"Fail to Reject H0\", \"A/B groups are similar!\", \"A/B groups are not similar!\")\n",
    "    \n",
    "    # Columns\n",
    "    if (ntA == False) & (ntB == False):\n",
    "        temp[\"Homogeneity\"] = np.where(leveneTest == False, \"Yes\", \"No\")\n",
    "        temp = temp[[\"Test Type\", \"Homogeneity\",\"AB Hypothesis\", \"p-value\", \"Comment\"]]\n",
    "    else:\n",
    "        temp = temp[[\"Test Type\",\"AB Hypothesis\", \"p-value\", \"Comment\"]]\n",
    "    \n",
    "    # Print Hypothesis\n",
    "    print(\"# A/B Testing Hypothesis\")\n",
    "    print(\"H0: A == B\")\n",
    "    print(\"H1: A != B\", \"\\n\")\n",
    "    \n",
    "    return temp\n",
    "    \n",
    "    \n",
    "    \n",
    "# Apply A/B Testing\n",
    "AB_Test(dataframe=df, group = \"version\", target = \"sum_gamerounds\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.058497,
     "end_time": "2023-06-19T02:02:05.885897",
     "exception": false,
     "start_time": "2023-06-19T02:02:05.827400",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Conclusion:** The analysis reveals that the distribution of total rounds played does not conform to a normal distribution. Furthermore, a comparison of group A and group B demonstrates distinct standard deviations between them. As a result, we need to apply the Mann-Whitney U Test to assess the similarity of these two groups.\n",
    "\n",
    "The obtained p-value is lower than the predefined significance level of 5%, leading us to reject the null hypothesis. Consequently, we conclude that group A and group B are not similar in terms of total rounds played."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "10"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.058555,
     "end_time": "2023-06-19T02:02:06.003220",
     "exception": false,
     "start_time": "2023-06-19T02:02:05.944665",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": [
    "## 4. The AB-test data on 1-day rentention rate and 7-day retention rate\n",
    "\n",
    "## 1-day retention by AB-group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "dc": {
     "key": "10"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:06.133869Z",
     "iopub.status.busy": "2023-06-19T02:02:06.133078Z",
     "iopub.status.idle": "2023-06-19T02:02:06.142990Z",
     "shell.execute_reply": "2023-06-19T02:02:06.142301Z",
     "shell.execute_reply.started": "2023-06-19T00:21:35.047477Z"
    },
    "papermill": {
     "duration": 0.0806,
     "end_time": "2023-06-19T02:02:06.143152",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.062552",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "version\n",
       "gate_30    42762\n",
       "gate_40    43432\n",
       "Name: userid, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Counting the number of players in each AB group.\n",
    "df_new.groupby('version')['userid'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "_kg_hide-input": true,
    "dc": {
     "key": "17"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.059338,
     "end_time": "2023-06-19T02:02:06.263973",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.204635",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "24"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.059984,
     "end_time": "2023-06-19T02:02:06.383658",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.323674",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "dc": {
     "key": "24"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:06.512015Z",
     "iopub.status.busy": "2023-06-19T02:02:06.510977Z",
     "iopub.status.idle": "2023-06-19T02:02:06.516803Z",
     "shell.execute_reply": "2023-06-19T02:02:06.516066Z"
    },
    "papermill": {
     "duration": 0.071325,
     "end_time": "2023-06-19T02:02:06.516936",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.445611",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4452144409455803"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The % of users that came back the day after they installed\n",
    "df['retention_1'].sum() / df['retention_1'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "31"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.060578,
     "end_time": "2023-06-19T02:02:06.638071",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.577493",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "dc": {
     "key": "31"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:06.767214Z",
     "iopub.status.busy": "2023-06-19T02:02:06.766465Z",
     "iopub.status.idle": "2023-06-19T02:02:06.793995Z",
     "shell.execute_reply": "2023-06-19T02:02:06.794718Z",
     "shell.execute_reply.started": "2023-06-19T00:30:37.047284Z"
    },
    "papermill": {
     "duration": 0.096105,
     "end_time": "2023-06-19T02:02:06.794883",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.698778",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Retention Rate\n",
      "version                \n",
      "gate_30          0.4482\n",
      "gate_40          0.4423\n"
     ]
    }
   ],
   "source": [
    "# Calculating 1-day retention for each AB-group\n",
    "retention_1=df.groupby('version')['retention_1'].sum() / df.groupby('version')['userid'].count()\n",
    "table = pd.DataFrame(retention_1, columns=['Retention Rate'])\n",
    "print(table)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "38"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.060349,
     "end_time": "2023-06-19T02:02:06.915861",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.855512",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "dc": {
     "key": "38"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:07.097829Z",
     "iopub.status.busy": "2023-06-19T02:02:07.096609Z",
     "iopub.status.idle": "2023-06-19T02:02:25.783643Z",
     "shell.execute_reply": "2023-06-19T02:02:25.782948Z",
     "shell.execute_reply.started": "2023-06-19T01:11:50.692595Z"
    },
    "papermill": {
     "duration": 18.807302,
     "end_time": "2023-06-19T02:02:25.783775",
     "exception": false,
     "start_time": "2023-06-19T02:02:06.976473",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [],
   "source": [
    "# Creating an list with bootstrapped means for each AB-group\n",
    "boot_1d = []\n",
    "for i in range(1000):\n",
    "    boot_mean = df.sample(frac=1,replace=True).groupby('version')['retention_1'].mean()\n",
    "    boot_1d.append(boot_mean)\n",
    "    \n",
    "# Transforming the list to a DataFrame\n",
    "boot_1d = pd.DataFrame(boot_1d)\n",
    "# Adding a column with the % difference between the two AB-groups\n",
    "boot_1d['diff'] =(boot_1d['gate_30']-boot_1d['gate_40'])/boot_1d['gate_40']*100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "46"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.059854,
     "end_time": "2023-06-19T02:02:25.903909",
     "exception": false,
     "start_time": "2023-06-19T02:02:25.844055",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "dc": {
     "key": "46"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:26.046486Z",
     "iopub.status.busy": "2023-06-19T02:02:26.041585Z",
     "iopub.status.idle": "2023-06-19T02:02:26.624969Z",
     "shell.execute_reply": "2023-06-19T02:02:26.624300Z",
     "shell.execute_reply.started": "2023-06-19T01:13:34.260168Z"
    },
    "papermill": {
     "duration": 0.660405,
     "end_time": "2023-06-19T02:02:26.625142",
     "exception": false,
     "start_time": "2023-06-19T02:02:25.964737",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(10, 4))\n",
    "\n",
    "# Plot the kernel density of boot_1d on the first subplot\n",
    "boot_1d[['gate_30','gate_40']].plot(kind='kde', ax=axes[0])\n",
    "axes[0].set_xlabel(\"% 1-day retention rate\")\n",
    "axes[0].set_title(\"Comparison of 1-day retention rate between two groups\")\n",
    "\n",
    "# Plot the kernel density of boot_7d['diff'] on the second subplot\n",
    "boot_1d['diff'].plot(kind='kde', ax=axes[1])\n",
    "axes[1].set_xlabel(\"%Difference in 1-day retention rate\")\n",
    "axes[1].set_title(\"%Distribution of 1 day retention rate Difference\")\n",
    "\n",
    "# Adjust the spacing between subplots\n",
    "plt.tight_layout()\n",
    "\n",
    "# Display the subplots\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:26.758056Z",
     "iopub.status.busy": "2023-06-19T02:02:26.757014Z",
     "iopub.status.idle": "2023-06-19T02:02:26.760972Z",
     "shell.execute_reply": "2023-06-19T02:02:26.761586Z",
     "shell.execute_reply.started": "2023-06-19T01:15:05.229097Z"
    },
    "papermill": {
     "duration": 0.073491,
     "end_time": "2023-06-19T02:02:26.761757",
     "exception": false,
     "start_time": "2023-06-19T02:02:26.688266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There is 97.8% probability that Group A has a higher 7-day retention rate than Group B\n"
     ]
    }
   ],
   "source": [
    "# Calculating the probability that 7-day retention is greater when the gate is at level 30\n",
    "prob_1 = (boot_1d['diff']>0).sum()/len(boot_1d)\n",
    "\n",
    "# Pretty printing the probability\n",
    "print(\"There is {:.1%} probability that Group A has a higher 7-day retention rate than Group B\".format(prob_1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "53"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.062175,
     "end_time": "2023-06-19T02:02:26.886682",
     "exception": false,
     "start_time": "2023-06-19T02:02:26.824507",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": [
    "From this chart, we can see that the most likely % difference in 1-day retention rate is around 1% - 2%, and that most of the distribution is above 0%, in favor of a gate at level 30. The probablity difference is above 0% is 96.9% "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "60"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.062196,
     "end_time": "2023-06-19T02:02:27.011544",
     "exception": false,
     "start_time": "2023-06-19T02:02:26.949348",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": [
    "## 7-day retention by AB-group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "dc": {
     "key": "60"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:27.151442Z",
     "iopub.status.busy": "2023-06-19T02:02:27.145946Z",
     "iopub.status.idle": "2023-06-19T02:02:27.173772Z",
     "shell.execute_reply": "2023-06-19T02:02:27.172980Z",
     "shell.execute_reply.started": "2023-06-19T00:45:05.132123Z"
    },
    "papermill": {
     "duration": 0.099786,
     "end_time": "2023-06-19T02:02:27.173907",
     "exception": false,
     "start_time": "2023-06-19T02:02:27.074121",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Retention Rate\n",
      "version                \n",
      "gate_30          0.1902\n",
      "gate_40          0.1820\n"
     ]
    }
   ],
   "source": [
    "# Calculating 7-day retention for both AB-groups\n",
    "# ... YOUR CODE FOR TASK 9 ...\n",
    "retention_7=df.groupby('version')['retention_7'].sum() / df.groupby('version')['userid'].count()\n",
    "table2 = pd.DataFrame(retention_7, columns=['Retention Rate'])\n",
    "print(table2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "67"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.065383,
     "end_time": "2023-06-19T02:02:27.302743",
     "exception": false,
     "start_time": "2023-06-19T02:02:27.237360",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "dc": {
     "key": "67"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:27.438783Z",
     "iopub.status.busy": "2023-06-19T02:02:27.437986Z",
     "iopub.status.idle": "2023-06-19T02:02:46.156895Z",
     "shell.execute_reply": "2023-06-19T02:02:46.156191Z",
     "shell.execute_reply.started": "2023-06-19T01:15:33.728923Z"
    },
    "papermill": {
     "duration": 18.79091,
     "end_time": "2023-06-19T02:02:46.157056",
     "exception": false,
     "start_time": "2023-06-19T02:02:27.366146",
     "status": "completed"
    },
    "tags": [
     "sample_code"
    ]
   },
   "outputs": [],
   "source": [
    "# Creating a list with bootstrapped means for each AB-group\n",
    "boot_7d = []\n",
    "for i in range(1000):\n",
    "    boot_mean = df.sample(frac=1,replace=True).groupby('version')['retention_7'].mean()\n",
    "    boot_7d.append(boot_mean)\n",
    "    \n",
    "# Transforming the list to a DataFrame\n",
    "boot_7d=pd.DataFrame(boot_7d)\n",
    "\n",
    "# Adding a column with the % difference between the two AB-groups\n",
    "boot_7d['diff'] = (boot_7d['gate_30']-boot_7d['gate_40'])/boot_7d['gate_40']*100\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "dc": {
     "key": "67"
    },
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:46.293770Z",
     "iopub.status.busy": "2023-06-19T02:02:46.292923Z",
     "iopub.status.idle": "2023-06-19T02:02:46.837931Z",
     "shell.execute_reply": "2023-06-19T02:02:46.837198Z",
     "shell.execute_reply.started": "2023-06-19T01:16:14.666600Z"
    },
    "papermill": {
     "duration": 0.616679,
     "end_time": "2023-06-19T02:02:46.838072",
     "exception": false,
     "start_time": "2023-06-19T02:02:46.221393",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a figure with subplots\n",
    "fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(10, 4))\n",
    "\n",
    "# Plot the kernel density of boot_1d on the first subplot\n",
    "boot_7d[['gate_30','gate_40']].plot(kind='kde', ax=axes[0])\n",
    "axes[0].set_xlabel(\"% 7-day retention rate\")\n",
    "axes[0].set_title(\"Comparison of 7-day Retention Rate between Two Groups\")\n",
    "\n",
    "# Plot the kernel density of boot_7d['diff'] on the second subplot\n",
    "boot_7d['diff'].plot(kind='kde', ax=axes[1])\n",
    "axes[1].set_xlabel(\"Difference in 7-day retention rate\")\n",
    "axes[1].set_title(\"Distribution of 7 day retention rate Difference\")\n",
    "\n",
    "# Adjust the spacing between subplots\n",
    "plt.tight_layout()\n",
    "\n",
    "# Display the subplots\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-19T02:02:46.976288Z",
     "iopub.status.busy": "2023-06-19T02:02:46.975450Z",
     "iopub.status.idle": "2023-06-19T02:02:46.979439Z",
     "shell.execute_reply": "2023-06-19T02:02:46.978833Z",
     "shell.execute_reply.started": "2023-06-19T01:16:11.748406Z"
    },
    "papermill": {
     "duration": 0.075589,
     "end_time": "2023-06-19T02:02:46.979575",
     "exception": false,
     "start_time": "2023-06-19T02:02:46.903986",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There is 100.0% probability that Group A has a higher 7-day retention rate than Group B\n"
     ]
    }
   ],
   "source": [
    "# Calculating the probability that 7-day retention is greater when the gate is at level 30\n",
    "prob_7 = (boot_7d['diff']>0).sum()/len(boot_7d)\n",
    "\n",
    "# Pretty printing the probability\n",
    "print(\"There is {:.1%} probability that Group A has a higher 7-day retention rate than Group B\".format(prob_7))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.064598,
     "end_time": "2023-06-19T02:02:47.109220",
     "exception": false,
     "start_time": "2023-06-19T02:02:47.044622",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Conclusion:**: \n",
    "\n",
    "\n",
    "Based on the analysis above, it is evident that the 1-day retention rate shows a most likely percentage difference of around 1% - 2%. Moreover, a significant portion of the distribution lies above 0%, indicating a favorable outcome for the group with a gate at level 30. The probability that the difference in 1-day retention rate between the two groups is above 0% is 96.9%.\n",
    "\n",
    "The 7-day retention rate exhibits a much higher percentage difference, reaching approximately 5%. This substantial difference suggests a more pronounced impact of the gate level on long-term retention. The probability that the difference in 7-day retention rate between the two groups is above 0% is 99.8%.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "dc": {
     "key": "74"
    },
    "deletable": false,
    "papermill": {
     "duration": 0.064742,
     "end_time": "2023-06-19T02:02:47.238594",
     "exception": false,
     "start_time": "2023-06-19T02:02:47.173852",
     "status": "completed"
    },
    "run_control": {
     "frozen": true
    },
    "tags": [
     "context"
    ]
   },
   "source": [
    "## 5.  Conclusion and Reflection\n",
    "<p>The hypothesis test tells us that the gate setting can influecne the users' behabiour on the total round they have played. The bootstrap result tells us that there is strong evidence that 7-day retention is higher when the gate is at level 30 than when it is at level 40. If we want to keep retention high — both 1-day and 7-day retention — we should not move the gate from level 30 to level 40. Perhaps, they could even lower the number to gate_20 or even gate_10 to see if that would be better. Anyways, we don't have the data so I guess we'll never know.\n",
    "\n",
    "<p>So, why is retention higher when the gate is positioned earlier? One could expect the opposite: The later the obstacle, the longer people are going to engage with the game. But this is not what the data tells us. The theory of <em>hedonic adaptation</em> can give one explanation for this. In short, hedonic adaptation is the tendency for people to get less and less enjoyment out of a fun activity over time if that activity is undertaken continuously. By forcing players to take a break when they reach a gate, their enjoyment of the game is prolonged. But when the gate is moved to level 40, fewer players make it far enough, and they are more likely to quit the game because they simply got bored of it. </p>\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "papermill": {
   "duration": 54.940444,
   "end_time": "2023-06-19T02:02:48.396808",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-06-19T02:01:53.456364",
   "version": "2.1.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
